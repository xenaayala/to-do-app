{"version":3,"sources":["components/TodoForm.js","components/TodoList.js","components/ManageTodo.js","App.js","index.js"],"names":["TodoForm","props","className","onSubmit","id","name","type","placeholder","value","todo","task","onChange","required","TodoList","todos","map","key","completed","style","width","onClick","onToggle","onDelete","colSpan","align","length","onClear","defaultProps","ManageTodo","initialValue","localStorage","getItem","JSON","parse","useState","setTodos","setTodo","useEffect","saveLocalStorage","setItem","stringify","window","addEventListener","removeEventListener","target","event","preventDefault","newTask","Date","now","temp","filter","App","render","document","getElementById"],"mappings":"2MAkCeA,MAhCf,SAAkBC,GAChB,OACE,yBAAKC,UAAU,kBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,0BAAMC,SAAUF,EAAME,SAAUD,UAAU,eACxC,yBAAKA,UAAU,kBACb,2BACEE,GAAG,OACHC,KAAK,OACLC,KAAK,OACLC,YAAY,eACZC,MAAOP,EAAMQ,KAAKC,KAClBR,UAAU,eACVS,SAAUV,EAAMU,SAChBC,UAAQ,KAIZ,2BACEN,KAAK,SACLE,MAAM,WACNH,KAAK,OACLH,UAAU,2BCtBxB,SAASW,EAASZ,GAChB,OACE,yBAAKC,UAAU,aACb,2BAAOA,UAAU,aACf,+BACGD,EAAMa,MAAMC,KAAI,SAAAN,GACf,OACE,wBACEO,IAAKP,EAAKL,GACVF,UACEO,EAAKQ,UAAY,gBAAkB,oBAGrC,wBAAIC,MAAO,CAAEC,MAAO,QAAUV,EAAKC,MACnC,4BACE,4BACER,UAAU,6BACVkB,QAAS,WACPnB,EAAMoB,SAASZ,EAAKL,MAHxB,YASA,4BACEF,UAAU,6BACVkB,QAAS,WACPnB,EAAMqB,SAASb,EAAKL,MAHxB,eAYR,4BACE,wBAAImB,QAAQ,IAAIC,MAAM,UACpB,4BACEtB,UACED,EAAMa,MAAMW,OAAS,EACjB,oCACA,mCAENL,QAAS,WACPnB,EAAMyB,YAPV,cAWU,SAaxBb,EAASc,aAAe,CACtBb,MAAO,IAGMD,QCIAe,MArEf,WAEE,IAAMC,EAAeC,aAAaC,QAAQ,SACtCC,KAAKC,MAAMH,aAAaC,QAAQ,UAChC,GAJgB,EAKMG,mBAASL,GALf,mBAKbf,EALa,KAKNqB,EALM,OAMID,mBAAS,CAC/B9B,GAAI,KACJM,KAAM,GACNO,WAAW,IATO,mBAMbR,EANa,KAMP2B,EANO,KAwDpB,OA5CAC,qBAAU,WACR,IAAMC,EAAmB,WACvBR,aAAaS,QAAQ,QAASP,KAAKQ,UAAU1B,KAK/C,OAFA2B,OAAOC,iBAAiB,eAAgBJ,GAEjC,WACLG,OAAOE,oBAAoB,eAAgBL,MAE5C,CAACxB,IAmCF,oCACE,kBAAC,EAAD,CAAUL,KAAMA,EAAME,SAlC1B,YAAmC,IAAXiC,EAAU,EAAVA,OACtBR,EAAQ,eAAK3B,EAAN,eAAamC,EAAOvC,KAAOuC,EAAOpC,UAiCOL,SA9BlD,SAAsB0C,GACpBA,EAAMC,iBACN,IAAIC,EAAO,eAAQtC,EAAR,CAAcL,GAAI4C,KAAKC,QAClCd,EAAS,GAAD,mBAAKrB,GAAL,CAAYiC,KACpBX,EAAQ,eAAK3B,EAAN,CAAYC,KAAM,SA2BvB,kBAAC,EAAD,CACEI,MAAOA,EACPO,SAhBN,SAAsBjB,GACpB,IAAM8C,EAAOpC,EAAMC,KAAI,SAAAN,GAIrB,OAHIA,EAAKL,KAAOA,IACdK,EAAKQ,WAAaR,EAAKQ,WAElBR,KAGT0B,EAASe,IASL5B,SA3BN,SAAsBlB,GACpB,IAAM8C,EAAOpC,EAAMqC,QAAO,SAAA1C,GAAI,OAAIA,EAAKL,KAAOA,KAC9C+B,EAASe,IA0BLxB,QAvBN,WAEES,EADa,SC5BFiB,MAbf,WACE,OACE,oCACE,yBAAKlD,UAAU,6BACb,wBAAIA,UAAU,QAAd,eAEF,yBAAKA,UAAU,OACb,kBAAC,EAAD,SCNRmD,iBAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.41e14a86.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction TodoForm(props) {\r\n  return (\r\n    <div className=\"container my-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <form onSubmit={props.onSubmit} className=\"form-inline\">\r\n            <div className=\"flex-fill mr-2\">\r\n              <input\r\n                id=\"task\"\r\n                name=\"task\"\r\n                type=\"text\"\r\n                placeholder=\"Enter a task\"\r\n                value={props.todo.task}\r\n                className=\"form-control\"\r\n                onChange={props.onChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Add Task\"\r\n              name=\"save\"\r\n              className=\"btn btn-secondary\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction TodoList(props) {\r\n  return (\r\n    <div className=\"container\">\r\n      <table className=\"table m-2\">\r\n        <tbody>\r\n          {props.todos.map(todo => {\r\n            return (\r\n              <tr\r\n                key={todo.id}\r\n                className={\r\n                  todo.completed ? \"table-success\" : \"table text-white\"\r\n                }\r\n              >\r\n                <td style={{ width: \"75%\" }}>{todo.task}</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-outline-light mr-2\"\r\n                    onClick={() => {\r\n                      props.onToggle(todo.id);\r\n                    }}\r\n                  >\r\n                    Complete\r\n                  </button>\r\n\r\n                  <button\r\n                    className=\"btn btn-outline-light mr-1\"\r\n                    onClick={() => {\r\n                      props.onDelete(todo.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n          <tr>\r\n            <td colSpan=\"2\" align=\"center\">\r\n              <button\r\n                className={\r\n                  props.todos.length > 0\r\n                    ? \"btn btn-outline-light mr1 d-block\"\r\n                    : \"btn btn-outline-light mr1 d-none\"\r\n                }\r\n                onClick={() => {\r\n                  props.onClear();\r\n                }}\r\n              >\r\n                Clear List\r\n              </button>{\" \"}\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.array.isRequired\r\n};\r\n\r\nTodoList.defaultProps = {\r\n  todos: []\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport TodoList from \"./TodoList\";\r\n\r\nfunction ManageTodo() {\r\n  //check if a todo list already exist, if not set to empty array\r\n  const initialValue = localStorage.getItem(\"todos\")\r\n    ? JSON.parse(localStorage.getItem(\"todos\"))\r\n    : [];\r\n  const [todos, setTodos] = useState(initialValue);\r\n  const [todo, setTodo] = useState({\r\n    id: null,\r\n    task: \"\",\r\n    completed: false\r\n  });\r\n  //Save to loacal storage when leaving the page\r\n  useEffect(() => {\r\n    const saveLocalStorage = () => {\r\n      localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n    };\r\n\r\n    window.addEventListener(\"beforeunload\", saveLocalStorage);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"beforeunload\", saveLocalStorage);\r\n    };\r\n  }, [todos]);\r\n\r\n  function handleChange({ target }) {\r\n    setTodo({ ...todo, [target.name]: target.value });\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    let newTask = { ...todo, id: Date.now() };\r\n    setTodos([...todos, newTask]);\r\n    setTodo({ ...todo, task: \"\" });\r\n  }\r\n\r\n  function handleDelete(id) {\r\n    const temp = todos.filter(todo => todo.id !== id);\r\n    setTodos(temp);\r\n  }\r\n\r\n  function handleClear() {\r\n    const temp = [];\r\n    setTodos(temp);\r\n  }\r\n\r\n  function handleToggle(id) {\r\n    const temp = todos.map(todo => {\r\n      if (todo.id === id) {\r\n        todo.completed = !todo.completed;\r\n      }\r\n      return todo;\r\n    });\r\n\r\n    setTodos(temp);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TodoForm todo={todo} onChange={handleChange} onSubmit={handleSubmit} />\r\n      <TodoList\r\n        todos={todos}\r\n        onToggle={handleToggle}\r\n        onDelete={handleDelete}\r\n        onClear={handleClear}\r\n      />\r\n    </>\r\n  );\r\n}\r\n//\r\nexport default ManageTodo;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport ManageTodo from \"./components/ManageTodo\";\n\nfunction App() {\n  return (\n    <>\n      <div className=\"jumbotron jumbotron-fluid\">\n        <h1 className=\"ml-3\">To Do List</h1>\n      </div>\n      <div className=\"App\">\n        <ManageTodo />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}